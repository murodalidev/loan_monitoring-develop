from app.db.connect_db import Base
from sqlalchemy import String,Integer,Column, Column, Integer, ForeignKey, BigInteger, Text, DateTime, Float, Date, Boolean
from sqlalchemy.orm import relationship




class Loan_Portfolio(Base):
    __tablename__='loan_portfolio'
    id=Column(Integer, primary_key=True)
    client_uid=Column(String(30), nullable=True)
    client_region = Column(Integer, ForeignKey('client_region.id'), nullable=True)
    client_district = Column(String(200), nullable=True)
    local_code_id = Column(Integer, ForeignKey('local_code.id'), nullable=True, index=True)
    loan_id = Column(BigInteger, nullable=True, index=True)
    grki_contract = Column(String(25), nullable=True)
    client_name = Column(Text)
    balance_account = Column(String(25), nullable=True)
    loan_account = Column(Text, nullable=True)
    num_and_date_decision = Column(String(50), nullable=True)
    currency_id = Column(Integer, ForeignKey('currency.id'), nullable=True, index=True)
    contract_amount = Column(String(100), nullable=True)
    contract_amount_uz_currency = Column(String(100), nullable=True)
    issue_date = Column(Date, nullable=True)
    maturity_date = Column(Date, nullable=True)
    term_type = Column(String(100), nullable=True)
    num_and_date_contract = Column(String(100), nullable=True)
    osn_cmp_percent = Column(Float, nullable=True)
    overdue_percentage = Column(Float, nullable=True)
    credit_account_balance = Column(String(100), nullable=True)
    balance_rev = Column(String(100), nullable=True)
    num_and_date_renewal = Column(String(100), nullable=True)
    maturity_date_renewal = Column(Date, nullable=True)
    overdue_balance = Column(String(100), nullable=True)
    overdue_start_date = Column(Date, nullable=True)
    judicial_balance = Column(String(100), nullable=True)
    law_enforcement_code = Column(String(50), nullable=True)
    solution_sign = Column(String(50), nullable=True)
    date_transf_date_decision = Column(String(50), nullable=True)
    total_overdue = Column(String(100), nullable=True)
    quality_class = Column(String(100))
    reserve_balance = Column(String(100), nullable=True)
    balance_init_percent = Column(String(100), nullable=True)
    balance_init_overdue_percent = Column(String(100), nullable=True)
    security_valuation = Column(String(100), nullable=True)
    loan_security = Column(Text, nullable=True)
    security_description = Column(Text, nullable=True)
    funds_sources = Column(Text, nullable=True)
    client_industry = Column(Text, nullable=True)
    lending_type = Column(String(255), nullable=True)
    loan_goal = Column(Text, nullable=True)
    client_parent_org = Column(Text, nullable=True)
    loan_industry = Column(Text, nullable=True)
    client_industry = Column(Text, nullable=True)
    credit_rating = Column(String(100), nullable=True)
    cb_chairman = Column(String(100), nullable=True)
    client_address = Column(Text, nullable=True)
    contract_uid = Column(BigInteger, nullable=True)
    inn_passport = Column(String(100), nullable=True)
    balance_interest_offbalance = Column(String(100), nullable=True)
    overdue_balance_interest_offbalance = Column(String(100), nullable=True)
    sum_cur_year = Column(String(100), nullable=True)
    repaid_cur_year = Column(String(100), nullable=True)
    total_issued = Column(String(100), nullable=True)
    total_repaid = Column(String(100), nullable=True)
    loan_purpose_specific = Column(Text, nullable=True)
    credit_line_purpose = Column(Text, nullable=True)
    judicial_account = Column(String(100), nullable=True)
    judicial_account_writeoff = Column(String(100), nullable=True)
    debt_account = Column(String(100), nullable=True)
    inps = Column(String(100), nullable=True)
    birth_date = Column(Date, nullable=True)
    phone = Column(String(25), nullable=True)
    mobile_phone = Column(String(25), nullable=True)
    balance_16309 = Column(String(30), nullable=True)
    balance_16379 = Column(String(30), nullable=True)
    balance_16323 = Column(String(30), nullable=True)
    balance_16325 = Column(String(30), nullable=True)
    balance_16377 = Column(String(30), nullable=True)
    balance_16397 = Column(String(30), nullable=True)
    balance_91501 = Column(String(30), nullable=True)
    balance_91503 = Column(String(30), nullable=True)
    balance_95413 = Column(String(30), nullable=True)
    balance_XXX99 = Column(String(30), nullable=True)
    balance_91809 = Column(String(30), nullable=True)
    checkingAccount = Column(String(30), nullable=True)
    current_percent_debt_account = Column(String(30), nullable=True)
    overdue_loan_interest_account = Column(String(30), nullable=True)
    percent_balance_on_overdue_loan = Column(String(30), nullable=True)
    interest_overdue_account = Column(String(30), nullable=True)
    overdue_debt = Column(String(30), nullable=True)
    accruedOverDueInterest = Column(String(30), nullable=True)
    date_overdue_percent = Column(Date, nullable=True)
    credit_status = Column(String(100), nullable=True)
    checking_account_balance = Column(String(30), nullable=True)
    loan_product = Column(Text, nullable=True)
    mahalla_name = Column(Text, nullable=True)
    borrower_type = Column(Text, nullable=True)
    num_workplaces = Column(Integer, nullable=True)
    gender_id = Column(Integer, ForeignKey('gender.id'))
    updated = Column(DateTime, nullable=True)
    status = Column(Integer, ForeignKey('status.id'))
    checked_status = Column(Integer, ForeignKey('checked_status.id'))
    is_taken_business = Column(Boolean, default = False)
    is_taken_kad = Column(Boolean, default = False)
    is_taken_loan = Column(Boolean, default = False)
    is_taken_problem = Column(Boolean, default = False)
    is_taken_juridic = Column(Boolean, default = False)
    is_taken_non_target = Column(Boolean, default = False)
    is_taken_out_of_balance = Column(Boolean, default = False)
    loan_case = relationship('LoanCase', backref='portfolio')
    business_case = relationship('BusinessCase', backref='portfolio')
    problems_case = relationship('ProblemsCase', backref='portfolio')
    juridical_case = relationship('JuridicalCase', backref='portfolio')
    
    class Config:
        orm_mode=True
        
        



class Loan_Portfolio_Date(Base):
    __tablename__='loan_portfolio_date'
    id=Column(Integer, primary_key=True)
    date = Column(Date, nullable=True)
    created = Column(DateTime, nullable=True)